Scope-The scope of a variable is the part of the program where the variables can be referenced/used
-A variable defined inside a local variable is called local variable.
-The scope of a local variable starts from its declaration and continues to the end of block which
contains the variable.
-A loval variable must be declared and initialised before it is used.
-Parameters are also local variables but their scope is the whole method.

Important(Naming of local variables):
We can declare local variables with the same name in the independent blocks.
But, We can not do this in the same block or nested blocks.
Example-1(Can declare like this)
-we have two for loops, x and y can be accessed by smaller block(i.e.local variable with same name "i" )
-dono alag alag i hai, aapas me independent hai.
int x = 1;
int y = 2;

for (int i = 1; i <= 10; i++) {
    x += i;
}

for (int i = 1; i <= 10; i++) {
    y +=1 ;
}

Example-2(Can't declare like this)
-
public static void main(String[] args) {
    int i = 0;
    int i = 1; //ERROR, you can't because both share some common scope, i.e. they are not independent.
}

Example-3(Can't declare like this)
-for loop is nested inside the main method
-scopes should never interfere.
public static void main(String[] args) {
    int i = 1;
    int sum = 0;
    for(int i = 1; i <= 10; i++){
        sum += i;
    }
}
Example-4(Can't do like this)
-for loop is nested inside another for loop
-this is why we name the inner loop variable j  :)
for(int i = 1; i <= 10; i++){
    for(int i = 1; i <= 10; i++){

    }
}
Example-5(Can do like this)
-scopes are not interfering
-these 2 variables are declared in different blocks
-so we can name them same
public class Main{
    public static void main(String[] args){
    int i = 1;
    }
    public static void method1(String[] args){
    int i = 1;
    }
}